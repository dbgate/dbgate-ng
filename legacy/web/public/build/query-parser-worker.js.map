{"version":3,"file":"query-parser-worker.js","sources":["../../../../node_modules/dbgate-query-splitter/lib/options.js","../../../../node_modules/dbgate-query-splitter/lib/splitQuery.js","../../../../node_modules/dbgate-query-splitter/lib/queryParamHandler.js","../../../../node_modules/dbgate-query-splitter/lib/index.js","../../src/query/QueryParserWorker.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.oracleSplitterOptions = exports.redisSplitterOptions = exports.noSplitSplitterOptions = exports.mongoSplitterOptions = exports.sqliteSplitterOptions = exports.postgreSplitterOptions = exports.mssqlSplitterOptions = exports.mysqlSplitterOptions = exports.defaultSplitterOptions = void 0;\nexports.defaultSplitterOptions = {\n    stringsBegins: [\"'\"],\n    stringsEnds: { \"'\": \"'\" },\n    stringEscapes: { \"'\": \"'\" },\n    allowSemicolon: true,\n    allowCustomDelimiter: false,\n    allowCustomSqlTerminator: false,\n    allowGoDelimiter: false,\n    allowSlashDelimiter: false,\n    allowDollarDollarString: false,\n    noSplit: false,\n    skipSeparatorBeginEnd: false,\n    doubleDashComments: true,\n    multilineComments: true,\n    javaScriptComments: false,\n    returnRichInfo: false,\n    splitByLines: false,\n    splitByEmptyLine: false,\n    preventSingleLineSplit: false,\n    adaptiveGoSplit: false,\n    ignoreComments: false,\n    copyFromStdin: false,\n    queryParameterStyle: null,\n};\nexports.mysqlSplitterOptions = Object.assign(Object.assign({}, exports.defaultSplitterOptions), { allowCustomDelimiter: true, stringsBegins: [\"'\", '`', '\"'], stringsEnds: { \"'\": \"'\", '`': '`', '\"': '\"' }, stringEscapes: { \"'\": '\\\\', '`': '`', '\"': '\\\\' } });\nexports.mssqlSplitterOptions = Object.assign(Object.assign({}, exports.defaultSplitterOptions), { allowSemicolon: false, allowGoDelimiter: true, stringsBegins: [\"'\", '['], stringsEnds: { \"'\": \"'\", '[': ']' }, stringEscapes: { \"'\": \"'\" } });\nexports.postgreSplitterOptions = Object.assign(Object.assign({}, exports.defaultSplitterOptions), { allowDollarDollarString: true, stringsBegins: [\"'\", '\"'], stringsEnds: { \"'\": \"'\", '\"': '\"' }, stringEscapes: { \"'\": \"'\", '\"': '\"' } });\nexports.sqliteSplitterOptions = Object.assign(Object.assign({}, exports.defaultSplitterOptions), { skipSeparatorBeginEnd: true, stringsBegins: [\"'\", '\"'], stringsEnds: { \"'\": \"'\", '\"': '\"' }, stringEscapes: { \"'\": \"'\", '\"': '\"' } });\nexports.mongoSplitterOptions = Object.assign(Object.assign({}, exports.defaultSplitterOptions), { stringsBegins: [\"'\", '\"'], stringsEnds: { \"'\": \"'\", '\"': '\"' }, stringEscapes: { \"'\": '\\\\', '\"': '\\\\' } });\nexports.noSplitSplitterOptions = Object.assign(Object.assign({}, exports.defaultSplitterOptions), { noSplit: true });\nexports.redisSplitterOptions = Object.assign(Object.assign({}, exports.defaultSplitterOptions), { splitByLines: true });\nexports.oracleSplitterOptions = Object.assign(Object.assign({}, exports.defaultSplitterOptions), { allowCustomSqlTerminator: true, allowSlashDelimiter: true, stringsBegins: [\"'\", '\"'], stringsEnds: { \"'\": \"'\", '\"': '\"' }, stringEscapes: { \"'\": \"'\", '\"': '\"' } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.splitQuery = exports.finishSplitStream = exports.getInitialDelimiter = exports.splitQueryLine = exports.scanToken = void 0;\nconst options_1 = require(\"./options\");\nconst SEMICOLON = ';';\nconst BEGIN_EXTRA_KEYWORDS = ['DEFERRED', 'IMMEDIATE', 'EXCLUSIVE', 'TRANSACTION'];\nconst BEGIN_EXTRA_KEYWORDS_REGEX = new RegExp(`^(?:${BEGIN_EXTRA_KEYWORDS.join('|')})`, 'i');\nconst END_EXTRA_KEYWORDS = ['TRANSACTION', 'IF'];\nconst END_EXTRA_KEYWORDS_REGEX = new RegExp(`^(?:${END_EXTRA_KEYWORDS.join('|')})`, 'i');\nfunction movePosition(context, count, isWhite) {\n    let { source, position, line, column, streamPosition } = context;\n    while (count > 0) {\n        if (source[position] == '\\n') {\n            line += 1;\n            column = 0;\n        }\n        else {\n            column += 1;\n        }\n        position += 1;\n        streamPosition += 1;\n        count -= 1;\n    }\n    context.position = position;\n    context.streamPosition = streamPosition;\n    context.line = line;\n    context.column = column;\n    if (!context.wasDataInCommand) {\n        if (isWhite) {\n            context.trimCommandStartPosition = streamPosition;\n            context.trimCommandStartLine = line;\n            context.trimCommandStartColumn = column;\n        }\n        else {\n            context.wasDataInCommand = true;\n        }\n    }\n    if (!isWhite) {\n        context.noWhitePosition = streamPosition;\n        context.noWhiteLine = line;\n        context.noWhiteColumn = column;\n    }\n}\nconst WHITESPACE_TOKEN = {\n    type: 'whitespace',\n    length: 1,\n};\nconst EOLN_TOKEN = {\n    type: 'eoln',\n    length: 1,\n};\nconst DATA_TOKEN = {\n    type: 'data',\n    length: 1,\n};\nfunction scanDollarQuotedString(context) {\n    if (!context.options.allowDollarDollarString)\n        return null;\n    let pos = context.position;\n    const s = context.source;\n    const match = /^(\\$[a-zA-Z0-9_]*\\$)/.exec(s.slice(pos));\n    if (!match)\n        return null;\n    const label = match[1];\n    pos += label.length;\n    while (pos < context.end) {\n        if (s.slice(pos).startsWith(label)) {\n            return {\n                type: 'string',\n                length: pos + label.length - context.position,\n            };\n        }\n        pos++;\n    }\n    return null;\n}\nfunction scanToken(context) {\n    var _a;\n    let pos = context.position;\n    const s = context.source;\n    const ch = s[pos];\n    if (context.isCopyFromStdin) {\n        if (s.slice(pos).startsWith('\\\\.') && !context.wasDataOnLine) {\n            return {\n                type: 'copy_stdin_end',\n                length: 2,\n            };\n        }\n        let pos2 = pos;\n        while (pos2 < context.end && s[pos2] != '\\n')\n            pos2++;\n        if (pos2 < context.end && s[pos2] == '\\n')\n            pos2++;\n        return {\n            type: 'copy_stdin_line',\n            length: pos2 - pos,\n        };\n    }\n    if (context.options.stringsBegins.includes(ch)) {\n        pos++;\n        const endch = context.options.stringsEnds[ch];\n        const escapech = context.options.stringEscapes[ch];\n        while (pos < context.end) {\n            if (s[pos] == endch) {\n                break;\n            }\n            if (escapech && s[pos] == escapech) {\n                pos += 2;\n            }\n            else {\n                pos++;\n            }\n        }\n        return {\n            type: 'string',\n            length: pos - context.position + 1,\n        };\n    }\n    if (context.options.queryParameterStyle &&\n        ((_a = context.options.queryParameterStyle) === null || _a === void 0 ? void 0 : _a.length) == 1 &&\n        ch == context.options.queryParameterStyle &&\n        (context.options.queryParameterStyle == '?' || /[a-zA-Z0-9_]/.test(s[pos + 1]))) {\n        pos++;\n        if (context.options.queryParameterStyle != '?') {\n            while (pos < context.end && /[a-zA-Z0-9_]/.test(s[pos]))\n                pos++;\n        }\n        return {\n            type: 'parameter',\n            value: s.slice(context.position, pos),\n            length: pos - context.position,\n        };\n    }\n    const isInBeginEnd = context.options.skipSeparatorBeginEnd && context.beginEndIdentLevel > 0;\n    if (context.currentDelimiter && s.slice(pos).startsWith(context.currentDelimiter) && !isInBeginEnd) {\n        return {\n            type: 'delimiter',\n            length: context.currentDelimiter.length,\n        };\n    }\n    if (ch == ' ' || ch == '\\t' || ch == '\\r') {\n        return WHITESPACE_TOKEN;\n    }\n    if (ch == '\\n') {\n        return EOLN_TOKEN;\n    }\n    if (context.options.doubleDashComments && ch == '-' && s[pos + 1] == '-') {\n        while (pos < context.end && s[pos] != '\\n')\n            pos++;\n        return {\n            type: 'comment',\n            length: pos - context.position,\n        };\n    }\n    if (context.options.multilineComments && ch == '/' && s[pos + 1] == '*') {\n        pos += 2;\n        while (pos < context.end) {\n            if (s[pos] == '*' && s[pos + 1] == '/')\n                break;\n            pos++;\n        }\n        return {\n            type: 'comment',\n            length: pos - context.position + 2,\n        };\n    }\n    if (context.options.allowCustomDelimiter && !context.wasDataOnLine) {\n        const m = s.slice(pos).match(/^DELIMITER[ \\t]+([^\\n]+)/i);\n        if (m) {\n            return {\n                type: 'set_delimiter',\n                value: m[1].trim(),\n                length: m[0].length,\n            };\n        }\n    }\n    if (context.options.allowCustomSqlTerminator) {\n        const m = s.slice(pos).match(/^SET[ \\t]+SQLT(ERMINATOR)?[ \\t]+(ON|OFF|\".\")/i);\n        if (m) {\n            if (m[2].toUpperCase() == 'OFF') {\n                return {\n                    type: 'set_sqlterminator',\n                    value: null,\n                    length: m[0].length,\n                };\n            }\n            if (m[2].toUpperCase() == 'ON') {\n                return {\n                    type: 'set_sqlterminator',\n                    value: SEMICOLON,\n                    length: m[0].length,\n                };\n            }\n            if (m[2].startsWith('\"')) {\n                return {\n                    type: 'set_sqlterminator',\n                    value: m[2].slice(1, -1),\n                    length: m[0].length,\n                };\n            }\n        }\n    }\n    if ((context.options.allowGoDelimiter || context.options.adaptiveGoSplit) && !context.wasDataOnLine) {\n        const m = s.slice(pos).match(/^GO[\\t\\r ]*(\\n|$)/i);\n        if (m) {\n            return {\n                type: 'go_delimiter',\n                length: m[0].endsWith('\\n') ? m[0].length - 1 : m[0].length,\n            };\n        }\n    }\n    if (context.options.allowSlashDelimiter && !context.wasDataOnLine) {\n        const m = s.slice(pos).match(/^\\/[\\t\\r ]*(\\n|$)/i);\n        if (m) {\n            return {\n                type: 'slash_delimiter',\n                length: m[0].endsWith('\\n') ? m[0].length - 1 : m[0].length,\n            };\n        }\n    }\n    if (context.options.adaptiveGoSplit) {\n        const m = s.slice(pos).match(/^(CREATE|ALTER)\\s*(PROCEDURE|FUNCTION|TRIGGER)/i);\n        if (m) {\n            return {\n                type: 'create_routine',\n                length: m[0].length,\n            };\n        }\n    }\n    if (context.options.copyFromStdin && !context.wasDataOnLine && s.slice(pos).startsWith('COPY ')) {\n        return {\n            type: 'copy',\n            length: 5,\n        };\n    }\n    if (context.isCopyFromStdinCandidate && s.slice(pos).startsWith('FROM stdin;')) {\n        let pos2 = pos + 'FROM stdin;'.length;\n        const pos0 = pos2 - 1;\n        while (pos2 < context.end && s[pos2] != '\\n')\n            pos2++;\n        if (s[pos2] == '\\n')\n            pos2++;\n        return {\n            type: 'copy_stdin_start',\n            length: pos2 - pos,\n            lengthWithoutWhitespace: pos0 - pos,\n        };\n    }\n    if (context.options.skipSeparatorBeginEnd && s.slice(pos).match(/^begin/i)) {\n        let pos2 = pos + 'BEGIN'.length;\n        let pos0 = pos2;\n        while (pos0 < context.end && /[^a-zA-Z0-9]/.test(s[pos0]))\n            pos0++;\n        if (!BEGIN_EXTRA_KEYWORDS_REGEX.test(s.slice(pos0))) {\n            return {\n                type: 'begin',\n                length: pos2 - pos,\n                lengthWithoutWhitespace: pos0 - pos,\n            };\n        }\n    }\n    if (context.options.skipSeparatorBeginEnd && s.slice(pos).match(/^end/i)) {\n        let pos2 = pos + 'END'.length;\n        let pos0 = pos2;\n        while (pos0 < context.end && /[^a-zA-Z0-9]/.test(s[pos0]))\n            pos0++;\n        if (!END_EXTRA_KEYWORDS_REGEX.test(s.slice(pos0))) {\n            return {\n                type: 'end',\n                length: pos2 - pos,\n            };\n        }\n    }\n    const dollarString = scanDollarQuotedString(context);\n    if (dollarString)\n        return dollarString;\n    return DATA_TOKEN;\n}\nexports.scanToken = scanToken;\nfunction containsDataAfterDelimiterOnLine(context, delimiter) {\n    var _a;\n    const cloned = {\n        options: context.options,\n        source: context.source,\n        position: context.position,\n        currentDelimiter: context.currentDelimiter,\n        end: context.end,\n        wasDataOnLine: context.wasDataOnLine,\n        isCopyFromStdinCandidate: context.isCopyFromStdinCandidate,\n        isCopyFromStdin: context.isCopyFromStdin,\n        beginEndIdentLevel: context.beginEndIdentLevel,\n    };\n    cloned.position += delimiter.length;\n    while (cloned.position < cloned.end) {\n        const token = scanToken(cloned);\n        if (!token) {\n            cloned.position += 1;\n            continue;\n        }\n        switch (token.type) {\n            case 'whitespace':\n                cloned.position += token.length;\n                continue;\n            case 'eoln':\n                return false;\n            case 'comment':\n                if ((_a = token.value) === null || _a === void 0 ? void 0 : _a.includes('\\n'))\n                    return true;\n                cloned.position += token.length;\n                continue;\n            default:\n                return true;\n        }\n    }\n}\nfunction pushQuery(context, specialMarker) {\n    context.commandPart += context.source.slice(context.currentCommandStart, context.position);\n    pushCurrentQueryPart(context, specialMarker);\n}\nfunction pushCurrentQueryPart(context, specialMarker) {\n    const trimmed = context.commandPart.substring(context.trimCommandStartPosition - context.commandStartPosition, context.noWhitePosition - context.commandStartPosition);\n    if (trimmed.trim()) {\n        if (context.options.returnRichInfo) {\n            context.pushOutput({\n                text: trimmed,\n                start: {\n                    position: context.commandStartPosition,\n                    line: context.commandStartLine,\n                    column: context.commandStartColumn,\n                },\n                end: {\n                    position: context.streamPosition,\n                    line: context.line,\n                    column: context.column,\n                },\n                trimStart: {\n                    position: context.trimCommandStartPosition,\n                    line: context.trimCommandStartLine,\n                    column: context.trimCommandStartColumn,\n                },\n                trimEnd: {\n                    position: context.noWhitePosition,\n                    line: context.noWhiteLine,\n                    column: context.noWhiteColumn,\n                },\n                specialMarker,\n            });\n        }\n        else {\n            context.pushOutput(trimmed);\n        }\n    }\n}\nfunction markStartCommand(context) {\n    context.commandStartPosition = context.streamPosition;\n    context.commandStartLine = context.line;\n    context.commandStartColumn = context.column;\n    context.trimCommandStartPosition = context.streamPosition;\n    context.trimCommandStartLine = context.line;\n    context.trimCommandStartColumn = context.column;\n    context.wasDataInCommand = false;\n}\nfunction splitByLines(context) {\n    while (context.position < context.end) {\n        if (context.source[context.position] == '\\n') {\n            pushQuery(context);\n            context.commandPart = '';\n            movePosition(context, 1, true);\n            context.currentCommandStart = context.position;\n            markStartCommand(context);\n        }\n        else {\n            movePosition(context, 1, /\\s/.test(context.source[context.position]));\n        }\n    }\n    if (context.end > context.currentCommandStart) {\n        context.commandPart += context.source.slice(context.currentCommandStart, context.position);\n    }\n}\nfunction splitQueryLine(context) {\n    if (context.options.splitByLines) {\n        splitByLines(context);\n        return;\n    }\n    while (context.position < context.end) {\n        const token = scanToken(context);\n        if (!token) {\n            // nothing special, move forward\n            movePosition(context, 1, false);\n            continue;\n        }\n        switch (token.type) {\n            case 'string':\n                movePosition(context, token.length, false);\n                context.wasDataOnLine = true;\n                break;\n            case 'comment':\n                movePosition(context, token.length, !!context.options.ignoreComments);\n                context.wasDataOnLine = true;\n                break;\n            case 'eoln':\n                if (!context.wasDataOnLine && context.options.splitByEmptyLine) {\n                    pushQuery(context);\n                    context.commandPart = '';\n                    movePosition(context, token.length, false);\n                    context.currentCommandStart = context.position;\n                    context.wasDataOnLine = false;\n                    markStartCommand(context);\n                    break;\n                }\n                movePosition(context, token.length, true);\n                context.wasDataOnLine = false;\n                break;\n            case 'data':\n                movePosition(context, token.length, false);\n                context.wasDataOnLine = true;\n                break;\n            case 'parameter':\n                movePosition(context, token.length, false);\n                context.wasDataOnLine = true;\n                break;\n            case 'whitespace':\n                movePosition(context, token.length, true);\n                break;\n            case 'set_delimiter':\n            case 'set_sqlterminator':\n                pushQuery(context);\n                context.commandPart = '';\n                context.currentDelimiter = token.value;\n                movePosition(context, token.length, false);\n                context.currentCommandStart = context.position;\n                markStartCommand(context);\n                break;\n            case 'go_delimiter':\n                pushQuery(context);\n                context.commandPart = '';\n                movePosition(context, token.length, false);\n                context.currentCommandStart = context.position;\n                markStartCommand(context);\n                if (context.options.adaptiveGoSplit) {\n                    context.currentDelimiter = SEMICOLON;\n                }\n                break;\n            case 'slash_delimiter':\n                pushQuery(context);\n                context.commandPart = '';\n                movePosition(context, token.length, false);\n                context.currentCommandStart = context.position;\n                markStartCommand(context);\n                break;\n            case 'create_routine':\n                movePosition(context, token.length, false);\n                if (context.options.adaptiveGoSplit) {\n                    context.currentDelimiter = null;\n                }\n                break;\n            case 'copy':\n                movePosition(context, token.length, false);\n                context.isCopyFromStdinCandidate = true;\n                context.wasDataOnLine = true;\n                break;\n            case 'copy_stdin_start':\n                movePosition(context, token.lengthWithoutWhitespace, false);\n                movePosition(context, token.length - token.lengthWithoutWhitespace, true);\n                context.isCopyFromStdin = true;\n                context.isCopyFromStdinCandidate = false;\n                context.wasDataOnLine = false;\n                pushQuery(context, 'copy_stdin_start');\n                context.commandPart = '';\n                context.currentCommandStart = context.position;\n                markStartCommand(context);\n                break;\n            case 'copy_stdin_line':\n                movePosition(context, token.length, false);\n                context.isCopyFromStdin = true;\n                context.isCopyFromStdinCandidate = false;\n                pushQuery(context, 'copy_stdin_line');\n                context.commandPart = '';\n                context.currentCommandStart = context.position;\n                markStartCommand(context);\n                break;\n            case 'copy_stdin_end':\n                movePosition(context, token.length, false);\n                context.isCopyFromStdin = false;\n                context.wasDataOnLine = true;\n                pushQuery(context, 'copy_stdin_end');\n                context.commandPart = '';\n                context.currentCommandStart = context.position;\n                markStartCommand(context);\n                break;\n            case 'delimiter':\n                if (context.options.preventSingleLineSplit && containsDataAfterDelimiterOnLine(context, token)) {\n                    movePosition(context, token.length, false);\n                    context.wasDataOnLine = true;\n                    break;\n                }\n                pushQuery(context);\n                context.commandPart = '';\n                movePosition(context, token.length, false);\n                context.currentCommandStart = context.position;\n                markStartCommand(context);\n                context.isCopyFromStdinCandidate = false;\n                break;\n            case 'begin':\n                if (context.options.skipSeparatorBeginEnd) {\n                    context.beginEndIdentLevel++;\n                }\n                movePosition(context, token.length, false);\n                break;\n            case 'end':\n                if (context.options.skipSeparatorBeginEnd && context.beginEndIdentLevel > 0) {\n                    context.beginEndIdentLevel--;\n                }\n                movePosition(context, token.length, false);\n                break;\n        }\n    }\n    if (context.end > context.currentCommandStart) {\n        context.commandPart += context.source.slice(context.currentCommandStart, context.position);\n    }\n}\nexports.splitQueryLine = splitQueryLine;\nfunction getInitialDelimiter(options) {\n    if (options === null || options === void 0 ? void 0 : options.adaptiveGoSplit)\n        return SEMICOLON;\n    return (options === null || options === void 0 ? void 0 : options.allowSemicolon) === false ? null : SEMICOLON;\n}\nexports.getInitialDelimiter = getInitialDelimiter;\nfunction finishSplitStream(context) {\n    pushCurrentQueryPart(context);\n}\nexports.finishSplitStream = finishSplitStream;\nfunction splitQuery(sql, options = null) {\n    var _a;\n    const usedOptions = Object.assign(Object.assign({}, options_1.defaultSplitterOptions), options);\n    if (usedOptions.noSplit) {\n        if (usedOptions.returnRichInfo) {\n            const lines = sql.split('\\n');\n            return [\n                {\n                    text: sql,\n                    start: {\n                        position: 0,\n                        line: 0,\n                        column: 0,\n                    },\n                    end: {\n                        position: sql.length,\n                        line: lines.length,\n                        column: ((_a = lines[lines.length - 1]) === null || _a === void 0 ? void 0 : _a.length) || 0,\n                    },\n                },\n            ];\n        }\n        return [sql];\n    }\n    const output = [];\n    const context = {\n        source: sql,\n        end: sql.length,\n        currentDelimiter: getInitialDelimiter(options),\n        position: 0,\n        column: 0,\n        line: 0,\n        currentCommandStart: 0,\n        commandStartLine: 0,\n        commandStartColumn: 0,\n        commandStartPosition: 0,\n        streamPosition: 0,\n        noWhiteLine: 0,\n        noWhiteColumn: 0,\n        noWhitePosition: 0,\n        trimCommandStartPosition: 0,\n        trimCommandStartLine: 0,\n        trimCommandStartColumn: 0,\n        beginEndIdentLevel: 0,\n        wasDataInCommand: false,\n        isCopyFromStdin: false,\n        isCopyFromStdinCandidate: false,\n        pushOutput: cmd => output.push(cmd),\n        wasDataOnLine: false,\n        options: usedOptions,\n        commandPart: '',\n    };\n    splitQueryLine(context);\n    finishSplitStream(context);\n    return output;\n}\nexports.splitQuery = splitQuery;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.replaceQueryParameters = exports.extractQueryParameters = void 0;\nconst splitQuery_1 = require(\"./splitQuery\");\nfunction createParameterizerContext(sql, options) {\n    return {\n        options,\n        source: sql,\n        position: 0,\n        currentDelimiter: (0, splitQuery_1.getInitialDelimiter)(options),\n        end: sql.length,\n        wasDataOnLine: false,\n        isCopyFromStdin: false,\n        isCopyFromStdinCandidate: false,\n        beginEndIdentLevel: 0,\n    };\n}\nfunction extractQueryParameters(sql, options) {\n    if (!sql || !options) {\n        return [];\n    }\n    const context = createParameterizerContext(sql, options);\n    const res = new Set();\n    while (context.position < context.end) {\n        const token = (0, splitQuery_1.scanToken)(context);\n        if (token === null) {\n            break;\n        }\n        if (token.type === 'parameter') {\n            if (token.value == '?') {\n                res.add(`?${res.size + 1}`);\n            }\n            else {\n                res.add(token.value);\n            }\n        }\n        context.position += token.length;\n    }\n    return Array.from(res);\n}\nexports.extractQueryParameters = extractQueryParameters;\nfunction replaceQueryParameters(sql, params, options) {\n    if (!sql || !options) {\n        return sql;\n    }\n    const context = createParameterizerContext(sql, options);\n    let res = '';\n    let questionParamCounter = 0;\n    while (context.position < context.end) {\n        const token = (0, splitQuery_1.scanToken)(context);\n        if (token === null) {\n            break;\n        }\n        if (token.type === 'parameter') {\n            const paramName = token.value == '?' ? `?${++questionParamCounter}` : token.value;\n            if (params[paramName]) {\n                res += params[paramName];\n            }\n            else {\n                res += sql.substring(context.position, context.position + token.length);\n            }\n        }\n        else {\n            res += sql.substring(context.position, context.position + token.length);\n        }\n        context.position += token.length;\n    }\n    return res;\n}\nexports.replaceQueryParameters = replaceQueryParameters;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.replaceQueryParameters = exports.extractQueryParameters = exports.splitQuery = void 0;\nvar splitQuery_1 = require(\"./splitQuery\");\nObject.defineProperty(exports, \"splitQuery\", { enumerable: true, get: function () { return splitQuery_1.splitQuery; } });\nvar queryParamHandler_1 = require(\"./queryParamHandler\");\nObject.defineProperty(exports, \"extractQueryParameters\", { enumerable: true, get: function () { return queryParamHandler_1.extractQueryParameters; } });\nObject.defineProperty(exports, \"replaceQueryParameters\", { enumerable: true, get: function () { return queryParamHandler_1.replaceQueryParameters; } });\n__exportStar(require(\"./options\"), exports);\n","import { splitQuery } from 'dbgate-query-splitter';\r\n\r\nonmessage = e => {\r\n  const result = splitQuery(e.data.text, e.data.options);\r\n  postMessage(result);\r\n};\r\n"],"names":["splitQuery_1","require$$0","this","require$$1","require$$2","splitQuery"],"mappings":"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"}